basePath: /api
definitions:
  handler.JSONBody:
    type: object
  handler.hellomessage:
    properties:
      content:
        type: string
    type: object
host: localhost:9000
info:
  contact: {}
  description: 这是一个基于 Gin 和 RPC 风格的习惯养成 API。应当只有开发环境下能看到该文档。
  title: 习惯养成 API 文档
  version: 0.3.2
paths:
  /handle-task:
    post:
      consumes:
      - application/json
      description: when method is "create || read || update || delete", deal with
        task to sql
      parameters:
      - description: 请求体
        in: body
        name: JSON_body
        required: true
        schema:
          $ref: '#/definitions/handler.JSONBody'
      produces:
      - application/json
      responses:
        "200":
          description: 成功响应
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 请求错误
          schema:
            additionalProperties: true
            type: object
        "404":
          description: 服务不存在
          schema:
            additionalProperties: true
            type: object
      summary: add, modify or delete a task
      tags:
      - appapi
  /posttest:
    post:
      consumes:
      - application/json
      description: 'post to it, when body is {"content": "hello api"}, you get 200
        with answer'
      parameters:
      - description: 请求体
        in: body
        name: jsonbody
        required: true
        schema:
          $ref: '#/definitions/handler.hellomessage'
      produces:
      - application/json
      responses:
        "200":
          description: 成功响应
          schema:
            type: json
        "400":
          description: 请求错误
          schema:
            additionalProperties: true
            type: object
        "404":
          description: 服务不存在
          schema:
            additionalProperties: true
            type: object
      summary: try a JSON-data to this api
      tags:
      - Hello-world-test
  /welcome:
    get:
      consumes:
      - '*/*'
      description: this api is like a "hello world"
      parameters:
      - description: 服务名称
        in: path
        name: service
        required: true
        type: string
      - description: 操作方法（create/update/delete）
        in: query
        name: method
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: 成功响应
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 请求错误
          schema:
            additionalProperties: true
            type: object
        "404":
          description: 服务不存在
          schema:
            additionalProperties: true
            type: object
      summary: welcome api
      tags:
      - Hello-world-test
swagger: "2.0"
