basePath: /api
definitions:
  appmodel.Task:
    properties:
      actualDoneTime:
        example: "2025-05-01T09:31:27+01:00"
        type: string
      createTime:
        example: "2023-01-02T18:07:05Z"
        type: string
      creater:
        $ref: '#/definitions/appmodel.User'
      description:
        example: Rule the world
        type: string
      id:
        example: d29799b5-c693-42ce-8270-0c2b8ccd8300
        type: string
      planToDoneTime:
        example: "2025-03-15T14:58:45+08:00"
        type: string
      status:
        example: pending
        type: string
      updateTime:
        example: "2023-01-02T20:23:21+01:00"
        type: string
    type: object
  appmodel.User:
    properties:
      name:
        example: kizunai9
        type: string
      uid:
        example: 1
        type: integer
    type: object
  handler.hellomessage:
    properties:
      content:
        type: string
    type: object
  rest.HandleTaskBody:
    properties:
      method:
        example: create
        type: string
      task:
        $ref: '#/definitions/appmodel.Task'
    type: object
  rest.UniResponse:
    properties:
      code:
        example: 200
        type: integer
      data: {}
      msg:
        example: success
        type: string
    type: object
host: localhost:9000
info:
  contact: {}
  description: 这是一个基于 Gin 和 RPC 风格的习惯养成 API。应当只有开发环境下能看到该文档。
  title: 习惯养成 API 文档
  version: 0.3.2
paths:
  /handle-task:
    post:
      consumes:
      - application/json
      description: |-
        Perform CRUD operations on tasks.
        - "create": Add new task (auto-generate ID if empty). Returns created task.
        - "read": Get all tasks by creator UID. Returns task array.
        - "update": Modify existing task by ID. Returns updated task.
        - "delete": Remove task by ID. Returns deleted tasks.
      parameters:
      - description: Request body
        in: body
        name: JSON_body
        required: true
        schema:
          $ref: '#/definitions/rest.HandleTaskBody'
      produces:
      - application/json
      responses:
        "200":
          description: 操作结果
          schema:
            $ref: '#/definitions/rest.UniResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest.UniResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/rest.UniResponse'
      summary: create, read, update, or delete a task based on method
      tags:
      - appapi
  /posttest:
    post:
      consumes:
      - application/json
      description: 'post to it, when body is {"content": "hello api"}, you get 200
        with answer'
      parameters:
      - description: 请求体
        in: body
        name: jsonbody
        required: true
        schema:
          $ref: '#/definitions/handler.hellomessage'
      produces:
      - application/json
      responses:
        "200":
          description: 成功响应
          schema:
            type: json
        "400":
          description: 请求错误
          schema:
            additionalProperties: true
            type: object
        "404":
          description: 服务不存在
          schema:
            additionalProperties: true
            type: object
      summary: try a JSON-data to this api
      tags:
      - Hello-world-test
  /welcome:
    get:
      consumes:
      - '*/*'
      description: this api is like a "hello world"
      parameters:
      - description: 服务名称
        in: path
        name: service
        required: true
        type: string
      - description: 操作方法（create/update/delete）
        in: query
        name: method
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: 成功响应
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 请求错误
          schema:
            additionalProperties: true
            type: object
        "404":
          description: 服务不存在
          schema:
            additionalProperties: true
            type: object
      summary: welcome api
      tags:
      - Hello-world-test
swagger: "2.0"
